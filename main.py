import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message
import subprocess
import os

BOT_TOKEN = "–í–ê–® –¢–û–ö–ï–ù"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


@dp.message(Command("start"))
async def start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª–∏—Ç –∏—Å–∫–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –Ω–∞ —Å–∞–π—Ç–∞—Ö –≤ –∫–æ—Ç–æ—Ä—ã—Ö –±—ã–ª –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –±–æ–ª–µ–µ 300 —Å–∞–π—Ç–æ–≤!\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /search username –¥–ª—è –ø–æ–∏—Å–∫–∞ –≥–¥–µ username –Ω–∏–∫–Ω–µ–π–º –≤–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!."
    )


@dp.message(Command("search"))
async def search_user(message: Message):
    args = message.text.split()
    if len(args) < 2:
        await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π: /search username")
        return

    username = args[1]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–¥–µ—Ä–∂–∫–µ
    wait_msg = await message.reply(
        "‚è≥ –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏... –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: 30 —Å–µ–∫.")

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º Sherlock
        result = subprocess.run(
            ["sherlock", username, "--timeout", "1", "--print-found"],
            capture_output=True,
            text=True,
            check=True)

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏..."
        await bot.delete_message(chat_id=message.chat.id,
                                 message_id=wait_msg.message_id)

        if result.stdout:
            response = f"üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è {username}:\n\n{result.stdout}"
        else:
            response = f"‚ùå –ê–∫–∫–∞—É–Ω—Ç—ã {username} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."

        # –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª–æ–º
        if len(response) > 4096:
            with open(f"{username}_results.txt", "w") as f:
                f.write(response)
            await message.reply_document(
                types.FSInputFile(f"{username}_results.txt"))
            os.remove(f"{username}_results.txt")
        else:
            await message.reply(response)

    except subprocess.CalledProcessError as e:
        await bot.delete_message(chat_id=message.chat.id,
                                 message_id=wait_msg.message_id)
        await message.reply(
            f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e.stderr or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ Sherlock'}")
    except Exception as e:
        await bot.delete_message(chat_id=message.chat.id,
                                 message_id=wait_msg.message_id)
        await message.reply(f"üö´ –û—à–∏–±–∫–∞: {str(e)}")


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
